#!/usr/bin/env php
<?php

// This takes a directory of PDF files, and extracts the relevant data, and outputs a CSV file

require __DIR__ . '/vendor/autoload.php';

$service_bulletin_directory = $argv[1];
$output_csv_path = $argv[2];

if (!is_dir($service_bulletin_directory) OR !is_readable($service_bulletin_directory)) {
    echo "The path parameter is not a directory, or you do not have read permissions on the directory.";
}

$output_csv_directory = dirname($output_csv_path);
if (!is_dir($output_csv_directory) OR !is_writable($output_csv_directory)) {
    echo "The directory for the output CSV path is not a directory or is not writable.";
}

$service_bulletin_directory = realpath($argv[1]);
$mime_type_parser = new \finfo(FILEINFO_MIME_TYPE);
$parser = new \Smalot\PdfParser\Parser();

$pdf_contents = [];
foreach (new \DirectoryIterator($service_bulletin_directory) as $service_bulletin_file) {
    
    if ($service_bulletin_file->isDot()) continue;

    if ($service_bulletin_file->getType() != 'file'
        OR $service_bulletin_file->getExtension() != 'pdf'
        OR $mime_type_parser->file($service_bulletin_file->getPathname()) != 'application/pdf') {
        echo "Skipping '{$service_bulletin_file->getFilename()}', not a PDF file.";
        echo "\n";
        continue;
    }

    $pdf = $parser->parseFile($service_bulletin_file->getPathname());
    $first_page = $pdf->getPages()[0];
    $first_page_text = $first_page->getText();

    preg_match('/^NUMBER: *(.+) */m', $first_page_text, $matches);
    $bulletin_number = $matches[1];

    preg_match('/^ISSUED: *(.+) */m', $first_page_text, $matches);
    $bulletin_issued_date = $matches[1];

    preg_match('/^REVISED: *(.+) */m', $first_page_text, $matches);
    $bulletin_revised_date = $matches[1];

    preg_match('/^MODEL\(S\): *(.+) */m', $first_page_text, $matches);
    $bulletin_model = $matches[1];

    preg_match('/^SUBJECT: *([\S\s\n]+?)\n^(?:PRODUCT SAFETY|â€”REVISION NOTICEâ€”|.+:)/m', $first_page_text, $matches);
    $bulletin_subject = preg_replace('/\n/', ' ' , $matches[1]);

    preg_match('/^Type of Change: *(.+) */m', $first_page_text, $matches);
    $bulletin_type_of_change = $matches[1];

    preg_match('/^Recommended[\n\r\s]+^Compliance: *(.+) */m', $first_page_text, $matches);
    $bulletin_recommended_compliance = $matches[1];

    $pdf_contents[] = [
        'NUMBER' => $bulletin_number, 
        'ISSUED' => $bulletin_issued_date, 
        'REVISED' => $bulletin_revised_date,
        'MODEL' => $bulletin_model, 
        'SUBJECT' => $bulletin_subject,
        'TYPE OF CHANGE' => $bulletin_type_of_change, 
        'RECOMMENDED COMPLIANCE' => $bulletin_recommended_compliance
    ];

}

$writer = \League\Csv\Writer::createFromFileObject(new \SplTempFileObject());

$writer->insertOne(['NUMBER', 'ISSUED', 'REVISED', 'MODEL', 'SUBJECT', 'TYPE OF CHANGE', 'RECOMMENDED COMPLIANCE']);
$writer->insertAll($pdf_contents);

$writer->output($output_csv_path);